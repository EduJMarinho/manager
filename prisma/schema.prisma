generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  collaborator
  partner
}

enum TaskStatus {
  Pendente
  EmProgresso
  Concluida
}

enum TaskPriority {
  Alta
  Media
  Baixa
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      UserRole
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  teamMemberships Team_Member[]
  Task            Task[]

  @@map("users")
}

model Team {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  members Team_Member[]
  Task    Task[]

  @@map("teams")
}

model Team_Member {
  id        Int      @id @default(autoincrement())
  user_id   Int
  team_id   Int
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [user_id], references: [id])
  team Team @relation(fields: [team_id], references: [id])

  @@unique([user_id, team_id])
  @@map("teams_members")
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  status      TaskStatus
  priority    TaskPriority

  assignedTo Int
  teamId     Int

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  user User @relation(fields: [assignedTo], references: [id])
  team Team @relation(fields: [teamId], references: [id])

  @@map("tasks")
}
